AWSTemplateFormatVersion: "2010-09-09"

Description: "this is the workshop number 4 "

Resources:
  S3WorkshopBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: "s3workshopbuckets"

  IAMRoleWorkshop:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      RoleName: S3WorkshopIAMRoleWorkshop
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "WorkshopS3ReadWriteAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:PutObject"
                  - "s3:ListBucket"
                  - "s3:DeleteObject"
                Resource:
                  - !Sub "arn:aws:s3:::${S3WorkshopBucket}"
                  - !Sub "arn:aws:s3:::${S3WorkshopBucket}/*"

  WriteLambdaFunctionWorkshop:
    Type: AWS::Lambda::Function
    DeletionPolicy: Delete
    Properties:
      Description: "the function for Workshop"
      FunctionName: "Writehandler"
      Handler: "index.lambda_handler"
      Role: !GetAtt IAMRoleWorkshop.Arn
      Runtime: "python3.9"
      Timeout: 60
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3WorkshopBucket
      Code:
        ZipFile: |
          import os
          import csv
          import boto3

          def lambda_handler(event, context):
            bucket_name = os.environ['BUCKET_NAME']
            # Step 2: Write Python code to create a CSV file
            header = ['Name', 'Age', 'Profession']
            data = [('John', '25', 'Engineer'),
                    ('Anna', '28', 'Doctor'),
                    ('Peter', '30', 'Artist')]
            filename = 'people.csv'
            with open('/tmp/' + filename, 'w', newline='') as f:
                writer = csv.writer(f)
                writer.writerow(header)
                writer.writerows(data)
            # Step 3: Write Python code to upload the CSV file to S3
            s3 = boto3.client('s3')
            s3.upload_file('/tmp/' + filename, bucket_name, filename)
      Tags:
        - Key: team
          Value: dev

  ReadLambdaFunctionWorkshop:
    Type: AWS::Lambda::Function
    DeletionPolicy: Delete
    Properties:
      Description: "the function for Workshop"
      FunctionName: "Readhandler"
      Handler: "index.lambda_handler"
      Role: !GetAtt IAMRoleWorkshop.Arn
      Runtime: "python3.9"
      Timeout: 60
      Environment:
        Variables:
          BUCKET_NAME: !Ref S3WorkshopBucket
      Code:
        ZipFile: |
          import os
          import boto3
          def lambda_handler(event, context):
            bucket_name = os.environ['BUCKET_NAME']
            s3 = boto3.client('s3')
            object_key = 'people.csv'
            try:
              response = s3.get_object(Bucket=bucket_name, Key=object_key)
              data = response['Body'].read()
              # Do something with the data
              print(data)
              return {
              'statusCode': 200,
              'body': 'Hello from Lambda.'
              }
            except Exception as e:
              print(f"Error: {e}")
              return {
              'statusCode': 500,
              'body': 'Error.'
              }
      Tags:
        - Key: team
          Value: dev
